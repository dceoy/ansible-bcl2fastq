---
- name: Set configs
  set_fact:
    dry_run: "{{ dry_run is defined and dry_run }}"
    use_docker: "{{ use_docker is defined and use_docker }}"
    run_user: "{{ run_user if run_user is defined else 'nobody' }}"

- name: Put bcl2fastq.sh
  become: true
  copy:
    src: bcl2fastq.sh
    dest: "{{ seq_dir_path }}/bcl2fastq.sh"
    mode: 0755
    owner: "{{ run_user }}"
    group: "{{ run_group if run_group is defined else run_user }}"

- name: Put docker-compose.yml
  when: use_docker|bool
  become: true
  copy:
    src: docker-compose.yml
    dest: "{{ seq_dir_path }}/docker-compose.yml"
    owner: "{{ run_user }}"
    group: "{{ run_group if run_group is defined else run_user }}"

- name: Set bcl2fastq_sh
  set_fact:
    bcl2fastq_sh: |
      {% if use_docker %}
      {%   set u = '$(id -u ' + run_user + '):$(id -g ' + run_user + ')' %}
      {%   set c = 'docker-compose run --rm -u ' + u + ' bcl2fastq' %}
      {% else %}
      {%   set c = seq_dir_path + '/bcl2fastq.sh' %}
      {% endif %}
      {{ c }}

- name: Find target directories
  shell: |
    {{ bcl2fastq_sh|trim }} --only-print \
      $(find . -maxdepth 1 -mindepth 1 -type d -name '[0-9]*_[^_]*_[0-9]*_*' | paste -sd ' ') \
      | xargs realpath
  args:
    chdir: "{{ seq_dir_path }}"
  register: target_dirs
  changed_when: false

- name: Execute bcl2fastq
  when: target_dirs.stdout_lines|length > 0
  become: true
  become_user: "{{ 'root' if use_docker else run_user }}"
  shell: |
    {{ bcl2fastq_sh|trim }} {{ '--dry-run' if dry_run else '' }} {{ item|basename }}
  args:
    chdir: "{{ seq_dir_path }}"
  with_items: "{{ target_dirs.stdout_lines }}"
  register: exec_bcl2fastq
  ignore_errors: true

- name: Change ownerships of log files
  when:
    - not dry_run|bool
    - use_docker|bool
    - target_dirs.stdout_lines|length > 0
  become: true
  file:
    path: "{{ seq_dir_path }}/{{ item|basename }}/bcl2fastq_log.txt"
    state: file
    owner: "{{ run_user }}"
    group: "{{ run_group if run_group is defined else run_user }}"
  with_items: "{{ target_dirs.stdout_lines }}"
  ignore_errors: true

- name: Send a message via Slack
  when:
    - slack_token is defined
    - slack_channel is defined
    - slack_icon_url is defined
    - target_dirs.stdout_lines|length > 0
  delegate_to: localhost
  environment:
    https_proxy: "{{ http_proxy if http_proxy is defined else '' }}"
  slack:
    token: "{{ slack_token }}"
    msg: |
      [ bcl2fastq {{ 'completed' if item is succeeded else 'failed' }} ]    {{ item.item }}
    color: "{{ 'good' if item is succeeded else 'danger' }}"
    channel: "#{{ slack_channel }}"
    username: "{{ ansible_user }}@{{ inventory_hostname }}"
    icon_url: "{{ slack_icon_url }}"
  with_items: "{{ exec_bcl2fastq.results }}"
