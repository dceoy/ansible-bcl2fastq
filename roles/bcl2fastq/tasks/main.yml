---
- name: Set a log file name
  set_fact:
    bcl2fastq_log_txt: bcl2fastq_log.txt
    use_docker: "{{ use_docker is defined and use_docker }}"
    run_user: "{{ run_user if run_user is defined else 'nobody' }}"

- name: Find run directories
  find:
    path: "{{ seq_dir_path }}"
    pattern: '[0-9]*_[^_]*_[0-9]*_*'
    file_type: directory
    use_regex: true
    recurse: no
  register: run_dirs

- name: Find target directories
  shell: |
    [[ ! -f "{{ item.path }}/{{ bcl2fastq_log_txt }}" ]] \
      && [[ -f "{{ item.path }}/SampleSheet.csv" ]] \
      && [[ -f "{{ item.path }}/RTAComplete.txt" ]] \
      && [[ ! $(find "{{ item.path }}/Data/Intensities/BaseCalls/" -name "*.fastq.gz") ]] \
      && echo "{{ item.path }}" \
      || :
  with_items: "{{ run_dirs.files }}"
  register: target_dirs
  changed_when: false

- name: Set a list of targets
  set_fact:
    target_list: |
      {% set o = [] %}
      {% for r in target_dirs.results if r.stdout %}
      {%   set _ = o.append(r.stdout) %}
      {% endfor %}
      {{ o }}

- name: Put docker-compose.yml
  when: use_docker
  become: true
  become_user: nobody
  copy:
    src: docker-compose.yml
    dest: "{{ seq_dir_path }}/docker-compose.yml"

- name: Execute bcl2fastq
  when: target_list|length > 0
  become: true
  become_user: "{{ 'root' if use_docker else run_user }}"
  shell: |
    {{ 'docker-compose run --rm -u ' + run_user + ' bcl2fastq' if use_docker else 'bcl2fastq' }} \
      --runfolder-dir {{ item|basename }} > {{ item }}/{{ bcl2fastq_log_txt }} 2>&1
  args:
    chdir: "{{ seq_dir_path }}"
  with_items: "{{ target_list }}"
  register: exec_bcl2fastq
  ignore_errors: true

- name: Change ownerships of log files
  when:
    - use_docker
    - target_list|length > 0
  become: true
  shell: |
    [[ -f {{ item }}/{{ bcl2fastq_log_txt }} ]] \
      && chown {{ run_user }}:{{ run_user }} {{ item }}/{{ bcl2fastq_log_txt }}
  args:
    chdir: "{{ seq_dir_path }}"
  with_items: "{{ target_list }}"
  ignore_errors: true

- name: Send a message via Slack
  when:
    - slack_token is defined
    - slack_channel is defined
    - slack_icon_url is defined
    - target_list|length > 0
  local_action:
    module: slack
    token: "{{ slack_token }}"
    msg: |
      [ bcl2fastq {{ 'completed' if item is succeeded else 'failed' }} ]    {{ item.item.path }}
    color: "{{ 'good' if item is succeeded else 'danger' }}"
    channel: "#{{ slack_channel }}"
    username: "{{ ansible_user }}@{{ inventory_hostname }}"
    icon_url: "{{ slack_icon_url }}"
  with_items: "{{ exec_bcl2fastq.results }}"
